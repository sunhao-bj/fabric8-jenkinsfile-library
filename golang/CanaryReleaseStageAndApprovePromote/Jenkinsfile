#!/usr/bin/groovy
@Library('github.com/sunhao-bj/fabric8-pipeline-library@v2.2.4')
def utils = new io.fabric8.Utils()
clientsNode{
  env.setProperty('FABRIC8_DOCKER_REGISTRY_SERVICE_HOST', registryHost)
  env.setProperty('FABRIC8_DOCKER_REGISTRY_SERVICE_PORT', registryPort)

  def envProd = DEPLOY_NAMESPACE
  def newVersion = ''

  checkout scm
//  git GIT_URL

  stage 'Canary release'
  echo 'NOTE: running pipelines for the first time will take longer as build and base docker images are pulled onto the node'
  if (!fileExists ('Dockerfile')) {
    writeFile file: 'Dockerfile', text: 'FROM registry.timeondata.com/fabric8/golang:onbuild'
  }

  newVersion = performCanaryRelease {}
  
  def rc = getKubernetesJson {
    port = 8080
    label = 'golang'
    icon = 'https://cdn.rawgit.com/fabric8io/fabric8/dc05040/website/src/images/logos/gopher.png'
    version = newVersion
    imageName = clusterImageName
  }

  stage 'Approve'
  approve{
    room = null
    version = canaryVersion
    console = fabric8Console
    environment = envProd
    exposeApp = IS_EXPOSE
  }

  stage 'Rollout Production'
  kubernetesApply(file: rc, environment: envProd)

}
