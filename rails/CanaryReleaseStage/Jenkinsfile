#!/usr/bin/groovy
@Library('github.com/sunhao-bj/fabric8-pipeline-library@v2.2.4')
def utils = new io.fabric8.Utils()

def versionPrefix = ""
try {
  versionPrefix = VERSION_PREFIX
} catch (Throwable e) {
  versionPrefix = "1.0"
}

def canaryVersion = "${versionPrefix}.${env.BUILD_NUMBER}"

clientsNode{
  env.setProperty('FABRIC8_DOCKER_REGISTRY_SERVICE_HOST', registryHost)
  env.setProperty('FABRIC8_DOCKER_REGISTRY_SERVICE_PORT', registryPort)

  def envStage = DEPLOY_NAMESPACE

  checkout scm
//  git GIT_URL

  stage 'Canary release'
  echo 'NOTE: running pipelines for the first time will take longer as build and base docker images are pulled onto the node'
  if (!fileExists ('Dockerfile')) {
    writeFile file: 'Dockerfile', text: 'FROM registry.timeondata.com/fabric8/rails:onbuild'
  }

  performCanaryRelease {
    version = canaryVersion
  }

  def rc = getKubernetesJson {
    port = 3000
    label = 'rails'
    icon = 'https://cdn.rawgit.com/fabric8io/fabric8-console/38f589a/img/icons/ruby.png'
    version = canaryVersion
    exposeApp = IS_EXPOSE
    imageName = clusterImageName
  }

  stage 'Rollout Staging'
  kubernetesApply(file: rc, environment: envStage)


}
