#!/usr/bin/groovy
@Library('github.com/sunhao-bj/fabric8-pipeline-library@v2.2.4')

def versionPrefix = ""
try {
  versionPrefix = VERSION_PREFIX
} catch (Throwable e) {
  versionPrefix = "1.0"
}

def canaryVersion = "${versionPrefix}.${env.BUILD_NUMBER}"

def fabric8Console = "${env.FABRIC8_CONSOLE ?: ''}"
def utils = new io.fabric8.Utils()
def label = "buildpod.${env.JOB_NAME}.${env.BUILD_NUMBER}".replace('-', '_').replace('/', '_')

mavenNode{
  env.setProperty('FABRIC8_DOCKER_REGISTRY_SERVICE_HOST', registryHost)
  env.setProperty('FABRIC8_DOCKER_REGISTRY_SERVICE_PORT', registryPort)

  def envProd = DEPLOY_NAMESPACE

  checkout scm
//  git GIT_URL

  echo 'NOTE: running pipelines for the first time will take longer as build and base docker images are pulled onto the node'
  container(name: 'maven') {

    stage 'Build Release'
    mavenCanaryRelease {
      version = canaryVersion
    }

    stage 'Get RC'

    def rc = getJavaKubernetesYaml {
       port = 8080
       label = 'maven'
       icon = 'https://cdn.rawgit.com/fabric8io/fabric8/dc05040/website/src/images/logos/spring-boot.svg'
       version = canaryVersion
       exposeApp = IS_EXPOSE
     }

    stage 'Approve'
    approve {
      room = null
      version = canaryVersion
      console = fabric8Console
      environment = envProd
    }

    stage 'Rollout Production'
    kubernetesApply(file: rc, environment: envProd)

  }
}
